{
  "openapi": "3.0.0",
  "info": {
    "title": "<Brand Name>'s API Documentation",
    "description": "Welcome to the Brand Name's API Documentation",
    "termsOfService": "https://lielamar.com",
    "contact": {
      "name": "<Brand Name> Support",
      "url": "https://domain.com/support",
      "email": "support@domain.com"
    },
    "license": {
      "name": "<Brand Name> 2020. All Rights Reserved."
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.domain.com/v1.0/",
      "description": "API Server"
    }
  ],
  "security": [
    {
      "API-KEY": []
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Loads data of all users",
        "operationId": "Load Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Loaded Users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/load-all"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a user",
        "operationId": "Create User",
        "security": [],
        "parameters": [
          {
            "type": "object",
            "name": "email",
            "in": "query",
            "description": "Email address of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "object",
            "name": "name",
            "in": "query",
            "description": "Full name of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "object",
            "name": "password",
            "in": "query",
            "description": "PBKDF2 Encrypted password of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/:userId": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Loads data of a user",
        "operationId": "Load User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Loaded User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/load"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "operationId": "Update User",
        "parameters": [
          {
            "type": "object",
            "name": "<parameter>",
            "in": "query",
            "description": "parameter",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "any"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Deletes a user",
        "operationId": "Delete User",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/vault/": {
      "get": {
        "tags": [
          "Users/Vault"
        ],
        "description": "Loads a user's vault",
        "operationId": "Load User's Vault",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Loaded User's Vault",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loadvault"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Users/Vault"
        ],
        "description": "Updates a user's vault",
        "operationId": "Update User's Vault",
        "parameters": [
          {
            "type": "object",
            "name": "vault",
            "in": "query",
            "description": "Encrypted vault",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "example": {
                "vault": "<encrypted vault>"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updatevault"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/access-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Generates an Access-Token",
        "operationId": "Generate Access Token",
        "security": [],
        "parameters": [
          {
            "type": "object",
            "name": "email",
            "in": "query",
            "description": "Email address of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "object",
            "name": "password",
            "in": "query",
            "description": "PBKDF2 Encrypted password of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "object",
            "name": "refresh-token",
            "in": "query",
            "description": "A Refresh Token",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Access Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth-access-token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Generates a Refresh-Token",
        "operationId": "Generate Refresh Token",
        "security": [],
        "parameters": [
          {
            "type": "object",
            "name": "email",
            "in": "query",
            "description": "Email address of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "object",
            "name": "password",
            "in": "query",
            "description": "PBKDF2 Encrypted password of the user",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Refresh Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth-refresh-token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "API-KEY": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "An Access Token with a lifetime of 5 minutes. Can be obtained by sending a post request to /auth/access-token."
      }
    },
    "schemas": {
      "load-all": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully loaded all users"
          },
          "data": {
            "type": "object",
            "example": {
              "user1": {
                "id": "14kda75ladh85ba36nda12maj42ka3k4",
                "email": "example1@example.com",
                "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
                "name": "John Doe"
              },
              "user2": {
                "id": "14kda75ladh85ba36nda12maj42ka3k4",
                "email": "example2@example.com",
                "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
                "name": "John Doe"
              },
              "user3": {
                "id": "14kda75ladh85ba36nda12maj42ka3k4",
                "email": "example3@example.com",
                "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
                "name": "John Doe"
              }
            }
          }
        },
        "description": "Load-All Schema"
      },
      "create": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully created user"
          },
          "data": {
            "type": "object",
            "example": {
              "id": "14kda75ladh85ba36nda12maj42ka3k4",
              "email": "example@example.com",
              "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
              "name": "John Doe"
            }
          }
        },
        "description": "Create Schema"
      },

      "load": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully loaded user"
          },
          "data": {
            "type": "object",
            "example": {
              "id": "14kda75ladh85ba36nda12maj42ka3k4",
              "email": "example@example.com",
              "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
              "name": "John Doe"
            }
          }
        },
        "description": "Load Schema"
      },
      "update": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully updated user"
          },
          "data": {
            "type": "object",
            "example": {
              "id": "14kda75ladh85ba36nda12maj42ka3k4",
              "email": "example@example.com",
              "emailVerificationToken": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw",
              "name": "John Doe"
            }
          }
        },
        "description": "Update Schema"
      },
      "delete": {
        "type": "object",
        "properties": {
        },
        "description": "Delete Schema"
      },

      "loadvault": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully loaded user"
          },
          "data": {
            "type": "object",
            "example": {
              "vault": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw"
            }
          }
        },
        "description": "Load vault Schema"
      },
      "updatevault": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully updated user"
          },
          "data": {
            "type": "object",
            "example": {
              "vault": "CscnZLCqKblP99iVoBR7BGYICmKsWKIWVt63xFU8iAz7wEIgFIkVEj70LXQz14Km2cXQXewOtsqmFSdDe2ZuGV4BrIqyuz1OnW1XJA0FCKkzMFrWTx2JNw"
            }
          }
        },
        "description": "Load vault Schema"
      },


      "auth-access-token": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully created Access Token"
          },
          "data": {
            "type": "object",
            "example": {
              "access-token": "opUJIIt8ypqHc7ckyhyoe3aS1BcjreOuz5Owuo3QmoYgjwFL1I2i14jTenCiW7ZUOBkB1jWR65hV9E2BIom6gOWus3Gb92WiC3dcQy4Ur5B7X19KtAtrDW"
            }
          }
        },
        "description": "Access Token"
      },
      "auth-refresh-token": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Successfully created Refresh Token"
          },
          "data": {
            "type": "object",
            "example": {
              "refresh-token": "opUJIIt8ypqHc7ckyhyoe3aS1BcjreOuz5Owuo3QmoYgjwFL1I2i14jTenCiW7ZUOBkB1jWR65hV9E2BIom6gOWus3Gb92WiC3dcQy4Ur5B7X19KtAtrDW"
            }
          }
        },
        "description": "Refresh Token"
      }
    }
  }
}